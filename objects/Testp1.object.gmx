<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_p1_fIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//add player to global player unit list
PVP = false;

scr_on_create();

str = 7;
intel = 4;
agi = 4;

hpmax = floor(str * 2) + floor(intel * 1.5) + floor(agi * 1.8);
energymax = floor(intel * 2) + floor(agi * 1.8) + floor(str * 1.5);

// target list from enemies that are active
global.p1_enemies = ds_list_create();

your_target = p1_target;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_player_end_step();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_player_one_controls();
scr_player_step();

        
          
    
 //PVP test 
 
 //Probably a better place for this, but it's here for now
 
 if (keyboard_check_pressed(ord("Z"))){
    if(PVP == false){
    if(instance_exists(Testp2)){
      ds_list_add(global.p1_enemies,Testp2);
      ds_list_add(global.p2_enemies, self);
        }
    if(instance_exists(Testp3)){
      ds_list_add(global.p1_enemies,Testp3);
      ds_list_add(global.p2_enemies, Testp3);
      ds_list_add(global.p3_enemies, self);
      ds_list_add(global.p3_enemies, Testp2);
      }
     if(instance_exists(Testp4)){
      ds_list_add(global.p1_enemies,Testp4);
      ds_list_add(global.p2_enemies, Testp4);
      ds_list_add(global.p3_enemies, Testp4);
      ds_list_add(global.p4_enemies, self);
      ds_list_add(global.p4_enemies, Testp2);
      ds_list_add(global.p4_enemies, Testp3);
      }
    PVP = true;
    }
    
    
    
 
    
     
else{

    PVP = false;
    ds_list_clear(global.p1_enemies);
    ds_list_clear(global.p2_enemies);
    ds_list_clear(global.p3_enemies);
    ds_list_clear(global.p4_enemies);
    
    if(instance_exists(your_target)){instance_destroy(your_target);}
    } 

}


 
 
 
 
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_shadow, 1, x, y+15, .6, .8, 0, c_black, 0.5);
draw_self();

image_blend = make_colour_rgb(255, 145, 121);

draw_set_color(c_black)
draw_healthbar(x - 20, y - 50, x + 20, y - 45, hppercent, c_black, c_red, c_green, 0, true, true);
draw_text_ext_transformed(x - 20, y - 50, string(hp),  2, 300, .5, .5, 0); 
draw_healthbar(x - 20, y - 40, x + 20, y - 35, energypercent, c_black, c_purple, c_yellow, 0, true, true);
draw_text_ext_transformed(x - 20, y - 40, string(energy),  2, 300, .5, .5, 0); 
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
