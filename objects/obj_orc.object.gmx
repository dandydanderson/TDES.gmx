<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_orc_idle_down</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>str = 5;
intel = 2;
agi = 2;
alive = true;
speed = 0;

hp = 10;
mana = intel * 2;
image_speed = .5;

wait = 0;


dir = "down";
state = "peaceful";
substate = "idle";
animating = false;
animatetimer= 0;

target = -1;


depth = -y;


//hitbox and hurtbox code

//hurtbox
hurtbox = scr_create_hurtbox(26,48,-13,-20);

//hitbox
hitbox = -1;

hit = false;
hitStun = 0;
hitBy = -1;

//add to p1_enemies list

ds_list_add(global.p1_enemies, self);





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hurtbox
with(hurtbox){
    x = other.x + xOffset;
    y = other.y + yOffset;
}

//hitbox
if(hitbox != -1){
    with(hitbox){
        x = other.x + xOffset;
        y = other.y + yOffset;
    }
}

if (hit = true)
{
hp = hp - 3;
hitStun = 5;
hit = false;

}

if (hitStun &gt; 0)

{
speed = -1 * hitStun;
hitStun = hitStun - 1;
}

if(hp &lt;1 and alive == true)
    {
    image_speed = .25;
    sprite_index = spr_orc_death;
    alive = false;
    speed = 0;

    }
    
if (alive == false)
    {
    if (image_index == 5)
        {
            image_speed = 0;
            friction = 10;
        }
    }
    
if (alive == false)
    {
        
    for(i = 0; i &lt; ds_list_size(global.p1_enemies); i++)
        {
        if(self == ds_list_find_value(global.p1_enemies, i))
            {
            ds_list_delete(global.p1_enemies, i);
            }
        }
    
    }
    
    
for (i = 0; i &lt; ds_list_size(global.player_units); i++)
    {
    if (distance_to_object(ds_list_find_value(global.player_units,i)) &lt; 100)
        {
    state = "aggro";
    target = ds_list_find_value(global.player_units,i);
        }
    }
    
if (state == "peaceful") {
        script_execute(scr_wander, 180, 7);
        if(speed &gt; 0) {speed = speed - 1;}
    }
    
    
if (animatetimer &gt; 0)
    {
    animatetimer = animatetimer - 1;
    }
    
if(animatetimer &lt; 1)
    {
    animatetimer = 0;
    animating = false;
    }



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target_x = Testp1.x;
target_y = Testp1.y;

if ( state == "aggro") {direction = point_direction(x, y, target_x, target_y);}



if (alive == true and !animating)
    {
     if (direction &gt; 315 or direction &lt;= 45)
        {
        sprite_index  = spr_orc_walk_right;
        }
        
    if (direction &gt; 45 and direction &lt;= 135)
        {
        sprite_index = spr_orc_walk_up;
        }
        
    if (direction &gt; 135 and direction &lt;= 225)
        {
        sprite_index = spr_orc_walk_left;
        }
        
    if (direction &gt; 225 and direction &lt;= 315)
        {
        sprite_index = spr_orc_walk_down;
        }
    
    

if (hitStun == 0 and !animating ){
    if( distance_to_object(Testp1) &gt; 10 and state == "aggro"){
    speed = 1;

}}
    
        }
        
for(i = 0; i &lt;ds_list_size(global.player_units);i++)
    
    if (distance_to_object(ds_list_find_value(global.player_units,i))&lt;20 and !animating)
    
    {
        speed = 6;
        animating = true;
        animatetimer= irandom_range(30,180);
        sprite_index = spr_orc_attack_down;
        
        
    }
    
    
    if(speed &gt; 1) {speed = speed -1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_shadow, 1, x, y+15, .6, .8, 0, c_black, 0.5);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
